# Testagem-Laboratorial
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

# Gerar dados fictícios de folhas de rosas
# Substitua esta parte pela leitura do seu próprio conjunto de dados de folhas de rosas
# Certifique-se de ter as características das folhas e a variável alvo corretamente formatadas
# Neste exemplo fictício, supomos que temos 1000 amostras com 4 características cada e 2 classes
X = np.random.rand(1000, 4)  # matriz de características das folhas
y = np.random.randint(0, 2, size=1000)  # vetor da variável alvo de classes das folhas (0 ou 1)

# Dividir os dados em conjuntos de treinamento e teste
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Treinar o modelo de classificação
lr = LogisticRegression()
lr.fit(X_train, y_train)

# Avaliar a precisão do modelo
y_pred = lr.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)
print(f'Acurácia do modelo: {accuracy:.2f}')

# Plotar gráfico de dispersão das amostras de teste coloridas de acordo com as classes previstas
plt.scatter(X_test[:, 0], X_test[:, 1], c=y_pred, cmap='coolwarm')
plt.xlabel('Característica 1')
plt.ylabel('Característica 2')
plt.title('Amostras de teste com cores das classes previstas')
plt.show()
